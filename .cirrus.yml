container:
  image: termux/package-builder:latest

##
##  When doing release builds (branch 'master'), update Docker image if
##  required.
##
docker_builder:
  name: Update docker image

  only_if: $CIRRUS_BRANCH == 'master'

  env:
    DOCKER_USERNAME: andronixapp
    DOCKER_PASSWORD: ENCRYPTED[e4856b6422e36ddce8a5cc2735b022f2391822350b2edc9b3046f89ac7f4f9085ccdaf71699861698f7be9e4bc50b4a0]

  script: |
    bash ./scripts/build/ci/cirrus-ci_dispatcher.sh --update-docker

##
##  Perform basic check for errors in build.sh package scripts.
##  If error found, exit with error code to stop build.
##
task:
  container:
    cpu: 1
    memory: 4

  name: Lint packages

  timeout_in: 5m

  depends_on:
    - Update docker image

  script: |
    bash scripts/lint-packages.sh

##
##  Determine changes in the last push, find modified packages and
##  build them for aarch64/arm/i686/x86_64 architectures.
##
##  Built packages are accessible from Cirrus CI web interface.
##
task:
  container:
    # Max configuration required by few large packages such as `rust`.
    cpu: 8
    memory: 24

  name: Build packages

  # 2 hours is a maximal timeout available for free use.
  timeout_in: 120m

  depends_on:
    - Lint packages

  environment:
    TERMUX_MAKE_PROCESSES: 8
    matrix:
      - TERMUX_ARCH: aarch64
      - TERMUX_ARCH: arm
      - TERMUX_ARCH: i686
      - TERMUX_ARCH: x86_64

  # Do not use built-in git client provided by Cirrus as it may
  # cause problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch="$CIRRUS_BRANCH" "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    else
      git clone --recursive "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git fetch origin "pull/$CIRRUS_PR/head:pull/$CIRRUS_PR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    fi

  build_script: |
    export TERMUX_DEBDIR="/tmp/debs-${TERMUX_ARCH}"
    ln -s "$TERMUX_DEBDIR" debs
    bash ./scripts/build/ci/cirrus-ci_dispatcher.sh

  aarch64_debs_cache:
    folder: "/tmp/debs-aarch64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64"

  arm_debs_cache:
    folder: "/tmp/debs-arm"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm"

  i686_debs_cache:
    folder: "/tmp/debs-i686"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686"

  x86-64_debs_cache:
    folder: "/tmp/debs-x86_64"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64"

  output_artifacts:
    path: "./debs/*.deb"

##
##  When doing release build (branch 'master'), upload built packages
##  to APT repository on Bintray.
##
task:
  container:
    cpu: 1
    memory: 4

  name: Upload packages to Bintray

  only_if: $CIRRUS_BRANCH == 'master'

  timeout_in: 60m

  depends_on:
    - Build packages

  environment:
    BINTRAY_USERNAME: imprakharshukla
    BINTRAY_API_KEY: ENCRYPTED[28f40ebb6712a609b6505650f1012b4248669dfc291837532b1debdd032b2dc86acfe9ee244698e1a4e124917fc62f0b]
    BINTRAY_GPG_SUBJECT: andronixapp
    BINTRAY_GPG_PASSPHRASE: ENCRYPTED[8efa2723f616f08cc486b957dfe02f6c34acccd5e4b55d370496be54e5ae632630b284e04239955f5df250cc4d829845]
    TERMUX_ANDROID_HOME: /data/data/studio.com.techriz.andronix/files/home
    TERMUX_PREFIX: /data/data/studio.com.techriz.andronix/files/usr

  # Do not use built-in git client provided by Cirrus as it may
  # cause problems when determining changed files.
  clone_script: |
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch="$CIRRUS_BRANCH" "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    else
      git clone --recursive "https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git" "$CIRRUS_WORKING_DIR"
      git fetch origin "pull/$CIRRUS_PR/head:pull/$CIRRUS_PR"
      git reset --hard "$CIRRUS_CHANGE_IN_REPO"
    fi

  aarch64_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-aarch64"

  arm_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-arm"

  i686_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-i686"

  x86-64_debs_cache:
    folder: "./debs"
    fingerprint_script: echo "${CIRRUS_CHANGE_IN_REPO}-x86_64"

  script: |
    bash ./scripts/build/ci/cirrus-ci_dispatcher.sh --upload
